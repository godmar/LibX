<?xml version="1.0" ?>
<?xml-stylesheet href="chrome://global/skin/" type="text/css"?>
<?xml-stylesheet href="chrome://browser/skin/" type="text/css"?>
<?xml-stylesheet href="chrome://libx/skin/libx.css" type="text/css"?>

<!-- ***** BEGIN LICENSE BLOCK *****
   - Version: MPL 1.1
   -
   - The contents of this file are subject to the Mozilla Public License Version
   - 1.1 (the "License"); you may not use this file except in compliance with
   - the License. You may obtain a copy of the License at
   - http://www.mozilla.org/MPL/
   -
   - Software distributed under the License is distributed on an "AS IS" basis,
   - WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
   - for the specific language governing rights and limitations under the
   - License.
   -
   - The Original Code is LibX Firefox Extension.
   -
   - The Initial Developer of the Original Code is Annette Bailey (libx.org@gmail.com).
   - Portions created by the Initial Developer are Copyright (C) 2005
   - the Initial Developer and Virginia Tech. All Rights Reserved.
   -
   - Contributor(s): Godmar Back (godmar@gmail.com)
   -
   - ***** END LICENSE BLOCK ***** -->

<!--
LibX Firefox Extension

Author: Annette Bailey <annette.bailey@gmail.com>
-->
<!DOCTYPE overlay>

<overlay orient="vertical" xmlns="http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul">

	<script type="application/x-javascript" src="chrome://global/content/utilityOverlay.js" />
	<script type="application/x-javascript" src="chrome://global/content/nsDragAndDrop.js" />
	<script type="application/x-javascript" src="chrome://global/content/nsTransferable.js" />
    <script type="application/x-javascript">
        <![CDATA[
        
        /* Inherit properties of global libx object */
        (function () {
            var gLibx = Components.classes['@libx.org/libxcomponent;1'].getService().wrappedJSObject.libx;
            libx = { };
            gLibx.core.Class.mixin(libx, gLibx, true);
        })();

        ]]>
    </script>
	<script type="application/x-javascript" src="chrome://libx/content/core/window/ff/browser.js" />
    <script type="application/x-javascript" src="chrome://libx/content/core/window/ff/libx.js" />

	<script type="application/x-javascript">
	<![CDATA[
	  // must postpone initialization until entire overlay is loaded into chrome
      window.addEventListener("load", function () {
        // delay LibX initialization until after all other handlers have executed
        // improves startup speed and avoids triggering bugs in Firefox proper on MacOS
        // suggested by Fritz Anderson (fritza@uchicago.edu)
        window.setTimeout(libx.browser.initialize, 0); 
      }, false);
    ]]>
    </script>
    
    <script type="application/javascript">
        <![CDATA[

        window.addEventListener('load', function() {
            
            var popupReference = { close: libx.core.EmptyFunction };
            
            document.getElementById('libx-button').addEventListener('click', function() {
                popupReference.close();
                popupReference = window.open("chrome://libx/content/popup/popup.html",
                    "libx-popup",
                    "width=200,height=200,left=-10000,titlebar=no,resizable=no,scrollbars=no,status=no,chrome=yes,dependent=yes,minimizable=no");
                        
                popupReference.addEventListener('blur', function() {
                    popupReference.close();
                }, false);
                
                popupReference.addEventListener('load', function() {
                    var $ = popupReference.$;
                
                    function adjustPopupPosition() {
                        popupReference.innerWidth = $('body').outerWidth();
                        popupReference.innerHeight = $('body').outerHeight();

                        var buttonBox = document.getElementById('libx-button').boxObject;
                        
                        var screenX = buttonBox.screenX - popupReference.outerWidth + buttonBox.width;
                        var screenY = buttonBox.screenY + buttonBox.height;
                        
                        // readjust popup position if it goes off the screen
                        if(screenX < 0)
                            screenX = 0;
                        if(screenY > screen.height - popupReference.outerHeight)
                            screenY = screen.height - popupReference.outerHeight - 50;
                            
                        popupReference.screenX = screenX;
                        popupReference.screenY = screenY;
                    }
                    
                    $('body').bind('DOMSubtreeModified', adjustPopupPosition);
                    
                }, false);
                
            }, false);
            
        }, false);
            
        ]]>
    </script>
    
    <toolbaritem id="urlbar-container">
        <toolbarbutton id="libx-button" insertafter="urlbar-search-splitter" 
            image="chrome://libx/skin/libx2-16.png"
        />
    </toolbaritem>
    
</overlay>

<!-- 
vim: ts=4 
-->
