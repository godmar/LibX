<?xml version="1.0" ?>
<?xml-stylesheet href="chrome://global/skin/" type="text/css"?>
<?xml-stylesheet href="chrome://browser/skin/" type="text/css"?>
<?xml-stylesheet href="chrome://libx/skin/libx.css" type="text/css"?>

<!-- ***** BEGIN LICENSE BLOCK *****
   - Version: MPL 1.1
   -
   - The contents of this file are subject to the Mozilla Public License Version
   - 1.1 (the "License"); you may not use this file except in compliance with
   - the License. You may obtain a copy of the License at
   - http://www.mozilla.org/MPL/
   -
   - Software distributed under the License is distributed on an "AS IS" basis,
   - WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
   - for the specific language governing rights and limitations under the
   - License.
   -
   - The Original Code is LibX Firefox Extension.
   -
   - The Initial Developer of the Original Code is Annette Bailey (libx.org@gmail.com).
   - Portions created by the Initial Developer are Copyright (C) 2005
   - the Initial Developer and Virginia Tech. All Rights Reserved.
   -
   - Contributor(s): Godmar Back (godmar@gmail.com)
   -
   - ***** END LICENSE BLOCK ***** -->

<!--
LibX Firefox Extension

Author: Annette Bailey <annette.bailey@gmail.com>
-->
<!DOCTYPE overlay>

<overlay orient="vertical" xmlns="http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul">

	<script type="application/x-javascript" src="chrome://global/content/utilityOverlay.js" />
	<script type="application/x-javascript" src="chrome://global/content/nsDragAndDrop.js" />
	<script type="application/x-javascript" src="chrome://global/content/nsTransferable.js" />
    <script type="application/x-javascript">
        <![CDATA[
        
        /* Inherit properties of global libx object */
        (function () {
            var gLibx = Components.classes['@libx.org/libxcomponent;1'].getService().wrappedJSObject.libx;
            libx = { };
            gLibx.core.Class.mixin(libx, gLibx, true);
        })();

        ]]>
    </script>
	<script type="application/x-javascript" src="chrome://libx/content/core/window/ff/browser.js" />
    <script type="application/x-javascript" src="chrome://libx/content/core/window/ff/libx.js" />

	<script type="application/x-javascript">
	<![CDATA[
	  // must postpone initialization until entire overlay is loaded into chrome
      window.addEventListener("load", function () {
        // delay LibX initialization until after all other handlers have executed
        // improves startup speed and avoids triggering bugs in Firefox proper on MacOS
        // suggested by Fritz Anderson (fritza@uchicago.edu)
        window.setTimeout(libx.browser.initialize, 0); 
      }, false);
    ]]>
    </script>
    
    <script type="application/javascript">
        <![CDATA[
            
        /*
         * This code is a workaround to Firefox bug #385609:
         * https://bugzilla.mozilla.org/show_bug.cgi?id=385609
         *
         * Alice0775 White posted this workaround at:
         * https://bugzilla.mozilla.org/show_bug.cgi?id=561157#c4
         *
         * This code creates a dummy popup window, temporarily gives it focus,
         * then focuses back on the LibX popup to resolve the focus bug.
         */
        window.addEventListener('load', function() {
        
            var windowObjectReference;
            var panel = document.getElementById('libx-popup-panel');
            var iframe = document.getElementById("libx-popup-iframe");
            
            windowObjectReference = window.open("chrome://libx/content/popup/dummy.html",
                "dummy",
                "left=-10000,resizable=no,scrollbars=no,status=no,chrome=yes,dialog=yes,minimizable=no,dependent=yes");
            
            panel.addEventListener('popupshowing', function() {
                
                // reset iframe URL to imitate Google Chrome functionality
                iframe.contentWindow.location = 'chrome://libx/content/popup/popup.html';
                    
                setTimeout(function() {
                    panel.focus();
                    iframe.contentWindow.focus();
                }, 0);
                
            }, false);
            
            panel.addEventListener('popuphidden', function() {
                windowObjectReference.focus();
                setTimeout(function() {
                    windowObjectReference.close();
                }, 0);
                
                // make the panel invisible until the new iframe is loaded
                // to prevent flickering
                panel.width = "0";
            }, false);
            
            // hide popup panel if user clicks outside div
            panel.addEventListener('mousedown', function(e) {
                if(e.target.tagName == 'HTML') {
                    document.getElementById('libx-popup-panel').hidePopup();
                }
            }, true);
            
            libx.events.addListener('PopupLoadingDone', {
                onPopupLoadingDone: function() {
                
                    var fullViewDiv = iframe.contentWindow.document.getElementById('full-view');
                    fullViewDiv.style.backgroundColor = 'white';
                    fullViewDiv.style.border = '1px solid #ccc';
                    fullViewDiv.style.padding = '8px';
                    
                    var simpleViewDiv = iframe.contentWindow.document.getElementById('simple-view');
                    simpleViewDiv.style.width = '180px';
                    simpleViewDiv.style.backgroundColor = 'white';
                    simpleViewDiv.style.border = '1px solid #ccc';
                    simpleViewDiv.style.padding = '8px';
                    simpleViewDiv.style.paddingBottom = '20px';
                
                    // resize the popup depending on whether user has
                    // full view or simple view enabled
                    function switchView(fullview) {
                        if(fullview)
                            panel.width = "635";
                        else
                            panel.width = "210";
                    }
                    
                    var fullview = libx.utils.browserprefs.getBoolPref("libx.edition.displayadvanced", true);
                    switchView(fullview);
                
                    var $ = iframe.contentWindow.$;
                    $('.switch-display').click(function() {
                        fullview = !fullview;
                        switchView(fullview);
                    });
                    
                    // close the popup once the user does a search
                    /*$('#simple-search-form').submit(function() {
                        document.getElementById('libx-popup-panel').hidePopup();
                    });
                    $('#full-search-form').submit(function() {
                        document.getElementById('libx-popup-panel').hidePopup();
                    });*/
                    
                }
            });
            
        }, false);
            
        ]]>
    </script>
    
    <box id="hello">
    </box>
    
    <toolbaritem id="urlbar-container">
        <toolbarbutton id="libx-button" insertafter="urlbar-search-splitter" 
            image="chrome://libx/skin/libx2-16.png"
            popup="libx-popup-panel"
        />
    </toolbaritem>
    
    <popupset>
        <panel id="libx-popup-panel" style="background-color: transparent; border: 0;">
            <iframe style="background-color: transparent;" width="650" height="700"
                id="libx-popup-iframe"/>
        </panel>
    </popupset>
    
</overlay>

<!-- 
vim: ts=4 
-->
