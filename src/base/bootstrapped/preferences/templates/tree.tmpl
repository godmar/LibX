{!
    /**
     *    Default Tree Template
     *    This template requires that the "calling" template define two functions:
     *      - nodeLocale: returns a localized string for a given node
     *      - leafLocale: returns a localized string for a given leaf
     */
    
    var treeAQ = new libx.utils.collections.ActivityQueue();
    templateScope.data.treeAQ = treeAQ;
!}

<!-- tree.tmpl -->
<ul id="tree-{+data._id+}">
    <for each="child" in="data._children">
        {!
            var childProcessedActivity = new libx.utils.collections.EmptyActivity();
            treeAQ.scheduleLast(childProcessedActivity);
            var tmplData = {};
            libx.core.Class.mixin(tmplData, templateScope.data, true);
            tmplData.activity = childProcessedActivity;
        !}
        {P child, "tree.node", tmplData P}
    </for>
</ul>

{!

    var createTreeActivity = {
        onready: function (treeId) {
            $("#tree-" + data._id).treeview({
                collapsed: true
            });
        }
    };
    treeAQ.scheduleLast(createTreeActivity);
    createTreeActivity.markReady(window.currentTreeId);
    
!}