# This edition's version
libxversion=1.1.4
#--------------------------------------------------

#
# This file contains the setting for the Virginia Tech Edition.
#
# To create your own edition, you must copy this file and change the 
# entries as documented.  The comments are not required. The comments in this
# file change frequently, so you may be better off writing your config file
# without comments, or only with comments for your own use.
#
# Entries that do not start with a $sign are required, but can be left 
# empty if desired, as in "value="
# Entries that start with a $sign are optional, and do not need to be here.
#
# Currently, many of the entries duplicate information - this will be fixed
# in the future as we switch to an XML-based config file format that allows
# automatic validation.
#

# This name of the edition will be shown in the title bar of the 
# "About-Box" box and in a tooltip
#
libxedition=Virginia Tech Edition

# This is shown in the list of extension if the user clicks on "Tools->Extensions"
emname=LibX Virginia Tech

# This is shown in the toolbar as label on the button on  the very left
emnameshort=LibX VT

# These links are shown in the dropdown menu on the top left
$link1.label=VT University Libraries
$link1.url=http://www.lib.vt.edu/
$link2.label=Addison Catalog
$link2.url=http://addison.vt.edu/
$link3.label=LibX VT Homepage
$link3.url=http://libx.org/editions/vt/libx.html
# you can add more here


#
# Byline for adapter.
#
# Leave empty or omit if you don't wish a byline
# otherwise, fill in, for example, your name and contact information. 
#
# $adaptedby=John Smith john.smith@email.com
# This information will be displayed in the About Box dialog.
#
# $adaptedby=

#
# LibX now supports multiple catalogs.
# The first one is called the primary catalog.
# The others are called secondary catalogs

# Begin of definitions for primary catalog

#
# The catalogtype.
#
# It must be one of millenium, horizon, aleph, voyager, or sirsi.
# Or, it can be sfx, sersol, and bookmarklet.
# sersol does a search in Serials Solution's Journal Linker
# sfx does a search in SFX's Journal search interface driven by OpenURL.
# bookmarklet allows generic searches.  An example is below.
#
# For millenium, you must give a $catalog.searchscope, see below.
#
# For aleph, you will need to specify the following properties also:
# Please make sure you uncomment them and move them to the left
#       $aleph.localbase=duk01  
#               this property must refer to your "localbase"
#               the example here refers to Duke University's. You must change it.
#
#       The remaining properties depend on the names of local indices:
#
#       $aleph.title=TIT
#       $aleph.author=WAU
#       $aleph.isbn=ISBN
#       $aleph.issn=ISSN
#       $aleph.subject=WSU
#       $aleph.callno=CNA
#       $aleph.keyword=WRD
#       $aleph.findfunc=find-b
#       $aleph.advfindfunc=find-a
#       $aleph.scanfunc=scan
#
#       aleph knows about "scan" (heading indexes) and "find" (straight keyword) indices. 
#       By default, title & call number use scan, all others use find.
#       Use a ; separated list to change that.  The codes are
#       'i' - ISBN, 'is' - ISSN, 'a' - author, 't' - title, 'Y' - keyword, 'c' - call number
#       'd' - Subject
#       In this example, title, call number, and author would be searched using scan.
#       $aleph.scan.index.list=t;c;a
#
#
# horizon and voyager usually operate with the default settings.
#

$catalog.type=millenium


# Name of the catalog - used in many places.

$catalog.name=Addison

# The base URL of the catalog
# >>> No slash at the end. <<<
# Do not include any path here.
# If you look at pg2 of http://www.oclc.org/worldcat/open/deeplinking/openworldcat_deeplinking.pdf
# you need to put the library_opac_baseURL here
#
# For aleph, do not include a trailing /F here.
#

$catalog.url=http://addison.vt.edu

#
# A regular expression that would match page displayed by the OPAC
# This is currently only used in the VT edition to insert links to
# floor maps, otherwise it is ignored.
#

$catalog.urlregexp=addison\.vt\.edu

# might be phased out

#
# We send along an element "sid=libxvt" with our query - if your OPAC software allows,
# you could identify queries originating from LibX in this way.
# Millenium, it appears, does not do this so this option currently has no effect here.
# (in fact, some installation don't like that flag at all - omit in this case.)
#
# Aleph, on the other hand, allows a "sourceid=" option.  We require this for Aleph.
# Pick "libx****" or something for which Aleph allows you to keep separate statistics.
#

$catalog.sid=libxvt

# Some catalogs allow searches over multiple scopes, such as "All Libraries", "Law Library Only", 
# "Vet Library" only etc.
# These are search scopes.
#
# Only Millennium and Sirsi support scopes
# At VT, scope 1 means all.  If unknown, use "1".
# For Sirsi catalogs, you can specify a specific library or library group
# 

$catalog.searchscope=1

#
# [Millenium only]
# Use this to sort the millenium results differently
# $millenium.sort=A

# Many installations prefer the "X" code for a keyword search in Millenium
# $millenium.keywordcode=X

# Some installations prefer the "W" code for an advanced search in Millenium
# $millenium.advancedcode=W

#
# [Sirsi only]
#
# Sirsi sort options include:
# -PBYR (new to old)
# PBYR (old to new)
# relevance
# AU (author)
# SU (subject)
# TI (title)
#
# Default is no sort field is provided
# $sirsi.sort=-PBYR

# For each catalog, you can now give a list of search options that appear
# in the left drop-down when that catalog is selected.
# This is a semicolon-separated list of values.  The first one is the default.
# The values are:
# 'i' - ISBN/ISSN
# 'd' - Subject
# 't' - Title
# 'Y' - Keyword
# 'a' - Author
# 'c' - Call Number
# 'at' - Article Title (marginally useful at this point, puts atitle= in OpenURLs)
# 'jt' - Journal Title (usually only useful for OpenURL journal search extensions (SFX, Sersol)
#
# Default for a regular catalog is:
# $catalog.options=Y;t;a;d;i;c
#                 (Keyword, Title, Author, Subject, ISBN/ISSN, Call Number)
#
# Millenium supports Journal Title searches, so we turn it on.

$catalog.options=Y;t;jt;a;d;i;c

# A secondary catalog can be defined like so:
# 
#    $catalog1.catalog.type=millenium
#    $catalog1.catalog.name=Connect NY
#    $catalog1.catalog.url=http://connectny.info
#    $catalog1.catalog.sid=libxvt
#    $catalog1.catalog.searchscope=1
#    $catalog1.millenium.sort=
#
# and so on ($catalog2., $catalog3., ...)
# The search is not a meta-search, it's additional options in the drop-down box.

# The second entry is a generic bookmarklet
#
# Bookmarklets can be defined like so
# bookmarklets need the 'type', 'name', 'url', and 'options' fields
#
# For example, Virginia Tech has a search form where the user can search
# for databases.  
#

$catalog1.catalog.type=bookmarklet

# That's the label that will appear in the drop-down list.

$catalog1.catalog.name=VT Database List

#
# This example shows how to define your own search labels.
#
# We want it to say "DB Title" in the drop-down list for this 
# Databases bookmarklet
#
# With $libx.searchoption<N>.label/.value you can either define additional
# search options, or you can redefine the labels for existing
# search options (such as 't', 'jt', 'Y', etc.)
#
# Note that, in all cases, the redefinition is global across all
# catalogs, so if you'd redefine "Journal Title" to "Periodical Title"
# it would do so for all catalogs that provide 'jt' in their search options.  
# (XXX: we should fix this maybe.)
#
$libx.searchoption1.label=DB Title
$libx.searchoption1.value=dbname
$catalog1.catalog.options=dbname

# That's the URL that's invoked when the user searches.  
# %dbname is replaced with the database name the user entered.

$catalog1.catalog.url=http://www.lib.vt.edu/dsp/index.php?searchval=%dbname&action=SearchDatabase

# Search VT Electronic Theses and Dissertations
$catalog2.catalog.type=bookmarklet
$catalog2.catalog.name=VT ETD
$catalog2.catalog.url=http://scholar.lib.vt.edu:8765/query.html?qt=%Y&col=theses&charset=iso-8859-1
$catalog2.catalog.options=Y

# Search EJournals.  
# This adds an option to search VT's "EJournals List", which uses
# Serials Solutions A-Z List.
#

$catalog3.catalog.type=sersol
$catalog3.catalog.name=VT EJournals
$catalog3.catalog.url=http://su8bj7jh4j.search.serialssolutions.com

# WorldCat
$catalog4.catalog.name=WorldCat
$catalog4.catalog.type=bookmarklet
$catalog4.catalog.url=http://www.worldcat.org/search?q=%Y+ti%3A%t+au%3A%a+kw%3A%i&qt=advanced
$catalog4.catalog.options=Y;t;a;i

##########################################################################
#

# Should we place ISBN-based links such that they point to OCLC's xISBN service?
# This will help if the user looks at a page that has an ISBN of a different edition
# Set this to true if you want that, omit if not

$cues.use.xisbn=true

# To make xISBN more robust, you should have OCLC assign an xISBN bookmark OAI for you.
# Go to http://alcme.oclc.org/bookmarks/ and either look for your identifier
# if you already have one, or sign up for one.  Jeff Young will give you one in a day.
# Specify the entire identifier here.
# Example:
# $catalog.xisbn.oai=oai:bookmarks.oclc.org:library.mit.edu

##################################################################################
#
# OpenURL resolver
#
# OpenURL resolver type
# Possible values: sersol, webbridge, generic, sfx
#
# Note: fundamentally, OpenURL resolvers do the same thing:
# they try to find/link to a resource given the meta tags in the URL
# However, some have quirks: for instance, sersol currently barks if you don't
# specify at least an issn or title meta tag.  Being able to account for such
# minor differences is the only reason to support multiple types here.
# generic and webbridge do the same thing.
#
# sersol and sfx support searches by journal title if set up so.
#
# Leave empty if you do not wish OpenURL support
#

$openurl.type=sersol

# Base URL of your OpenURL resolver
# include an ending slash here if necessary
# Examples:
#
# No ending slash:
# SFX: $openurl.url=http://orion.galib.uga.edu/sfx_git1   
# WebBridge: $openurl.url=http://www.library.lafayette.edu:4550/resserv
#
# Needs an ending slash:
# SerSol: $openurl.url=http://zr2yp8gq5s.search.serialssolutions.com/
# Sirsi: $openurl.url=http://bucknell-resolver.sirsi.net/
#

$openurl.url=http://su8bj7jh4j.search.serialssolutions.com/

#
# The 'sid' used by libx.
# This is put in the 'sid=...' part of the OpenURL request.
# It must be something that the resolver accepts.
# It should be something the resolver keeps separate statistics for.
#
# Some resolvers (WB) are very strict about which sid's (also called "Origins" or "Sources")
# they allow.  For those, either add libx as a vendor or pick a sid here that the resolver
# understands.
#

$openurl.sid=libx:virginiatech

#
# Name of your OpenURL resolver
#

$openurl.name=VT Article Linker

#
# This OpenURL resolver supports OpenURL version 1.0 
# default is 0.1.
#
# This currently affects only how COinS processing is done.
# Outside of COinS processing, we still use v0.1 syntax.
# 
$openurl.version=1.0
#

# Default drop-down options for the OpenURL resolver is
# $openurl.options=jt
# See above for description of options
# The OpenURL resolver is not displayed if $openurl.dontshowintoolbar=true is set.
# 
# At VT, we don't want the OpenURL resolver to show because we have
# already added it as a catalog under its name.  If we didn't set it,
# it would show "Search VT Article Linker"
# 
$openurl.dontshowintoolbar=true

#
# When autolinking ISSN, make the link point to the OpenURL resolver.
# If not set or set to false, make the link point to the primary catalog instead.
#
$openurl.autolinkissn=true

#######
#
# Off-campus proxying.
# Currently support "ezproxy" and "wam".
# Leave empty if not used.
#

$proxy.type=ezproxy

#
# How to rewrite URLs for proxying.  
# For ezproxy, the "%S" is replaced with the URL that should be proxied.
# For wam, provide the hostname for which DNS catch-all is enabled
#        (typically identical to catalogurl without http, as in addison.vt.edu)
#

$proxy.url=http://ezproxy.lib.vt.edu:8080/login?url=%S

# Name displayed to the user in right-click context menu
# This should be something the user recognizes as a library service

$proxy.name=EZProxy

#
# Should we hijack and rewrite OpenURLs displayed on the Google Scholar page?
# If your library is registered with Scholar, this will simply turn your links into cues 
# If your library is not registered with Scholar, *and* you set preferences in Scholar
# to display results for a library (e.g. Stanford) that IS registered, those links
# will be turned into cues that are redirected to your own OpenURL resolver.
#

$libx.rewritescholarpage=true

#
# Support COINS http://ocoins.info/
#

$libx.supportcoins=true

#
# If true, a cue is added to a SerSol results page that shows genre=book&isbn=
# See libx.org -> "Upcoming Features"
#

$libx.sersolisbnfix=true

#
# (Experimental) autolink facility.  
# Includes an adapted version of Jesse Ruderman's autolink script: 
# http://www.squarefree.com/2005/05/22/autolink/
# Autolinks ISBN, ISSN, DOI, Pubmed IDs.
# The user can turn this option off via a checkmark in the menu.
#

$libx.autolink=true

# Internal URL of large logo.
# Change only the "shield50.gif" part to be the filename of your logo
# lower/upper case is significant
# An external URL works here

logoURL=chrome://libx/skin/shield50.gif

# Internal URL of small logo
# Please make this an internal (chrome://) based URL and bundle the image 
#
emiconURL=chrome://libx/skin/virginiatech.ico

# Description displayed in "Tools->Extensions"
# This will be removed in future versions and replaced with an auto-generated text
emdescription=Toolbar for Virginia Tech Library users

#
# Page to which users are directed if they click "Tools->Extensions->Libx->Homepage"
# These URLs assume the edition would be hosted on libx
# Adjust if you wish to host yourself.
#
# If hosted on libx.org, the edition homepage should be
# http://libx.org/editions/*EDITION*/libx.html
# where *EDITION* corresponds to the edition's id, such as vt
# We put a redirect for libx.html either to an external page
# See libx.org/editions.php for examples, or to a generic page
#
# In the next three entries, replace vt with your domain (4x).
# These three entries will eventually be phased out for libx-hosted editions
#
emhomepageURL=http://www.libx.org/editions/vt/libx.html

# URL which Firefox polls periodically for updates.
# If you want to host the edition yourself, adjust.
emupdateURL=http://www.libx.org/editions/vt/update.rdf

# Location of the .xpi file
xpilocation=http://www.libx.org/editions/vt/libx-vt.xpi

