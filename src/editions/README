To create a new edition, you must create a new directory in here first.

Let's say you want to create an edition for Academic University, acu

You create a directory:

# mkdir acu
# cd acu

Then, copy into this directory the following files:

# cp ../vt/definitions.properties .
# cp ../vt/definitions.dtd .
# cp ../vt/config .
# cp ../vt/files .
# cp ../vt/libx.html .

Then, get a small logo (http://yourlibrary.edu/favicon.ico works really well)
that shows well at 16x16 and a large logo and copy those into the acu directory.

# wget ...
# wget ...

Next, edit files and replace the last two lines:
Replace shield50.gif with the filename of your large logo.
Replace virginiatech.ico with the filename of your small logo.

Adapt all entries in acu/config as needed.
(If you don't have openurl support or ezproxy support, set the variables to empty, 
as in proxytype=        )

Finally, run

# cd ..
# ./createextension.pl acu

acu/libx-acu.xpi will have your extension for installation.


-------------------
The following files control customization:

config 
------
    sets a list of variables key=value, one per line. 
    All files in the base subdirectory will be copied into the xpi 
    All occurrences of $key$ will be replaced with value.  


files
------
    consists of a list of files that need to be copied into the xpi file.
    Each entry is of the form file destination-directory-relative-to-top
    Those files will ALSO be subject to config substitution from config files.


After running "createextension.pl", the files can be made "live" by copying
them to the libx.org editions directory (if hosted at libx.org)
See makelive.sh for what's being copied.
Adjust createextension.pl if you want to host your edition yourself.

-------------------------------------------------------------------------------------

The libx.org/editions directory contains the editions hosted at libx.org.
Each edition is in a subdirectory, for instance libx.org/editions/vt/
hosts the VT edition.  

Each hosted edition must contain the .xpi file, the update.rdf files, and, optionally, 
a libx.html file.

The libx.html can alternatively be made part of the library's home site so the
offering will appear to come directly from the offering library.

